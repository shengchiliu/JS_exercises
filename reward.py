import numpy as np


h0 = 3; w0 = 3

O = np.ones([h0+2, w0+2])
O[h0, w0] = -99
F = np.zeros([h0+2, w0+2])
R = np.zeros([h0*w0, h0*w0])

for m in range(h0):
    for n in range(w0):
        F = np.zeros([h0+2, w0+2])
        m1 = m + 1; n1 = n + 1
        # F[m1-1, n1] = 1
        # F[m1, n1-1] = 1
        # F[m1, n1+1] = 1
        # F[m1+1, n1] = 1

        # F[m1-1, n1-1] = 1
        # F[m1-1, n1] = 1
        # F[m1-1, n1+1] = 1
        # F[m1, n1-1] = 1
        # F[m1, n1+1] = 1
        # F[m1+1, n1-1] = 1
        # F[m1+1, n1] = 1
        # F[m1+1, n1+1] = 1
        
        # F[m1-1, n1-1] = 1
        # F[m1-1, n1] = 2
        # F[m1-1, n1+1] = 3
        # F[m1, n1-1] = 1
        # F[m1, n1+1] = 3
        # F[m1+1, n1-1] = 1
        # F[m1+1, n1] = 2
        # F[m1+1, n1+1] = 3
        
        F[m1-1, n1-1] = 1
        F[m1-1, n1] = 1
        F[m1-1, n1+1] = 1
        F[m1, n1-1] = 2
        F[m1, n1+1] = 2
        F[m1+1, n1-1] = 3
        F[m1+1, n1] = 3
        F[m1+1, n1+1] = 3

        A = F-O
        R[m*w0+n, ] = A[1:-1, 1:-1].reshape(1,h0*w0)

# R[np.where(R == 99.)] = -1
# R[np.where(R >= 100.)] = 100
print(R)


# [[ -1.   1.  -1.   2.   2.  -1.  -1.  -1.  -1.]
#  [  1.  -1.   1.   2.   2.   2.  -1.  -1.  -1.]
#  [ -1.   1.  -1.  -1.   2.   2.  -1.  -1.  -1.]
#  [  0.   0.  -1.  -1.   1.  -1.   2.   2.  -1.]
#  [  0.   0.   0.   1.  -1.   1.   2.   2. 100.]
#  [ -1.   0.   0.  -1.   1.  -1.  -1.   2. 100.]
#  [ -1.  -1.  -1.   0.   0.  -1.  -1.   1.  -1.]
#  [ -1.  -1.  -1.   0.   0.   0.   1.  -1. 100.]
#  [ -1.  -1.  -1.  -1.   0.   0.  -1.   1.  -1.]]